[{"title":"浅谈Linux下音乐app优劣","url":"/2021/02/24/mpd/","content":"浅谈Linux下音乐app优劣网易云音乐Archlinux安装：\n$ sudo pacman -S netease-cloud-music\n\n此版本是网易云与deepin合作出品，个人感觉兼容性不错，在各DE上都表现良好，甚至在WM上用起来也很舒服，这也是我没有推荐qq音乐的原因。\nvscode插件安装方式：vscode插件搜索 cloudmusic\nvscode插件，跨平台，win，linux，mac通用。简洁，由于内置了unblock等插件，乐库全，变敲代码边听音乐，支持底栏显示歌词，体验非常舒适。\nyesplaymusicArchlinux安装：\n$ yay -S yesplaymusic-appimage\n\n跨平台，其他平台请到项目地址自行下载。这个AUR包为用appimage打包的基于浏览器封装的h5程序，乐库全(unblock)，界面好看，抄袭applemusic的设计，保留网易云音乐的优点，支持网易云账号登陆，同步歌单。\nmqd + ncmpcpp简介mqd(Music_Player_Daemon)做服务端，ncmcpp(可选)做客户端，这是linux下不少用户最喜欢的播放器之一。通常用于命令行下，因其可高度自定义的界面和低内存占用而占据不少用户量。特别是使用WM的用户更是深爱，搭配polybar添加插件等等，体验非常不错。但大多数人都因为其一堆的配置文件被劝退了，但实际接触并不复杂。\nMQD官方wiki\nArchwiki-MPD\nArchwiki-ncmpcpp\n浅谈mqd优缺点\n优点\n自身轻便低内存占用\n简洁美观，可自定义强\n符合unix哲学，keep it simple,stupid\ncs架构，客户端可选择性强，ncmpc，ncmpcpp(基于ncmpc)\n\n\n缺点\n配置复杂\n本地播放器\n\n\n\n环境要求Alsa(内核组件) 或 pauseaudio(代理)\n安装方式$ sudo pacman -S mpd ncmpcpp\n\n配置文件优先级 ~/.config/mpd/mpd.conf &gt;&gt; ~/.mpd/mpd.conf\n也可运行时指定配置文件\n$ mpd ~/.config/mpd/my_mpd.conf\n\n通常可加入.xinitrc或bspwmrc等配置文件中自启动\n坑\n报错文件或文件夹不存在\n$ mkdir ~/.config/mpd/playlists$ touch ~/.config/mpd/&#123;database,log,pid,state,sticker.sql&#125;\n\n配置文件里的可选文件夹需手动创建\n\n多用户配置，利用systemd控制mpd.service，但是由于权限问题报错\n$ systemctl status mpd\n\n建议放弃，配置单用户模式、、、\n\n端口占用 \n$ lsof -i:6600\n\n查看哪个程序占用设定的端口，直接kill -9 pid杀掉\n\n内存分配错误\nFailed to initialize io_uring: io_uring_queue_init() failed: Cannot allocate memory\n\n直接忽略跳过\n\nmpd启动后其他程序无声\n详见Archwiki解决mpd独占问题\n\n\n"},{"title":"安卓双系统的分析与实现","url":"/2021/02/25/Multi-system/","content":"注:本文为资深刷机用户推荐，小白请勿轻易尝试，可作为分析思路浏览，以下操作如未说明则都需解锁Bootloader锁(如果有的话)，并已获得root权限。\n引言首先你应对电脑多系统有大致了解，BIOS如何引导操作系统，Bootloader是干了什么事，怎样通过磁盘分区、多重引导等实现多系统。相对于手机这些嵌入式系统，由于牵涉到各家硬件驱动是否开源等等一些问题，通过类似电脑端grub，systemd-boot，refind等达到多重引导是较难实现的。但是通过转换思路，既然操作系统它是通过挂载对应磁盘分区进行之后的一系列操作，是否又可以通过改变分区表(或者说特定分区指向)从而达到敌不动我动的效果，从而欺骗了bootloader。\n安卓双系统底层实现原理磁盘分区工具的选择方向既然已经清楚了，那接下来就是具体思路。由于安卓系统本就基于linux内核，通过一些C/C++库支撑，每个apk应用都是运行在ART(Dalvik)虚拟机之上。则可以尝试通过一些磁盘分区工具尝试对分区进行删改，在arm架构处理器上处理gpt分区表用的较多的GNU工具有sgdisk、parted等，可自行选择。由于大多数手机系统都已经内置sgdisk工具，本文以sgdisk举例，如系统未内置则需要自行解决，解决方法参考linux。\n安卓手机磁盘分区在对磁盘进行重分区之前，有必要先对手机内存(如未说明则后文内存指手机内部存储，即等价于电脑硬盘，非电脑内存条)驱动器有一定了解，目前市面上手机内存主要为ufs闪存，有少部分为emmc闪存，在磁盘分区处理上有稍微差异，本文主要以ufs闪存为例。ufs闪存的手机通常把逻辑驱动器划分为sda,sdb,sdc,sdd,sde,sdf等，设备分别映射文件到/dev/block/sda,/dev/block/sdb…等，emmc则映射到/dev/block/mmcblk0…，磁盘分区表记录了该逻辑驱动器上的各分区始末位置、分区大小等信息，位于该逻辑驱动器的前n个块。\nmix2s分区表信息如下：\n$ sgdisk --print /dev/block/sdaDisk /dev/block/sda: 14419968 sectors, 55.0 GiBLogical sector size: 4096 bytesDisk identifier (GUID): E9F67F91-775B-75A5-2D93-3CDF9DEB39EFPartition table holds up to 32 entriesFirst usable sector is 6, last usable sector is 14419962Partitions will be aligned on 2-sector boundariesTotal free space is 0 sectors (0 bytes)Number  Start (sector)    End (sector)  Size       Code  Name   1               6               9   16.0 KiB    FFFF  switch   2              10              17   32.0 KiB    FFFF  ssd......         ......         ......  18           98304          311295   832.0 MiB   FFFF  cust  19          311296          327679   64.0 MiB    FFFF  recovery  20          327680          393215   256.0 MiB   FFFF  cache  21          393216        14419962   53.5 GiB    FFFF  userdata  $ sgdisk --print /dev/block/sdeDisk /dev/block/sde: 1179648 sectors, 4.5 GiBLogical sector size: 4096 bytesDisk identifier (GUID): 09A16BAE-F899-2669-BA14-602F3A220D2FPartition table holds up to 64 entriesFirst usable sector is 6, last usable sector is 1179642Partitions will be aligned on 2-sector boundariesTotal free space is 16379 sectors (64.0 MiB)Number  Start (sector)    End (sector)  Size       Code  Name   1               6              13   32.0 KiB    FFFF  sec   2              14              21   32.0 KiB    FFFF  limits......         ......         ......  42           24576           32767   32.0 MiB    FFFF  splash  43           32768           40959   32.0 MiB    FFFF  logo  44           40960           49151   32.0 MiB    FFFF  dsp  45           49152           65535   64.0 MiB    FFFF  boot  46           65536          114687   192.0 MiB   0700  modem  47          114688          376831   1024.0 MiB  FFFF  vendor  48          376832         1163263   3.0 GiB     FFFF  system  49         1163264         1179642   64.0 MiB    FFFF  last_parti\n\n\n\nsgdisk使用方法sgdisk工具需要在su下使用，详细使用方法可在终端输入sgdisk按回车查看以下列出几个需要用到的几个命令\n$ sgdisk --print /dev/block/sda #打印驱动器sda分区表$ sgdisk --new=26:12345:34567 #新建分区号为26的分区，从第12345块开始，到34567块结束$ sgdisk --new=27:0:+512M /dev/block/sda #新建分区号为27的分区，从第一个可以容下512M的空间的起始位置开始，建立一个512M的分区$ sgdisk --new=0:0:0 /dev/block/sda #从第一个可用分区号开始，从第一个可用分区块位置开始，到结束$ sgdisk --change-name=18:boot /dev/block/sda #将分区号为18的分区改名为boot$ sgdisk --delete=21 /dev/block/sda #删除分区号为21的分区\n注:以上命令均需指定驱动器位置，不指定则命令无任何作用。电脑上驱动器一般为/dev/sda，手机上稍微有不同之处，通常为/dev/block/sda，且执行命令后重启生效，所以在未完成全部操作之前切勿重启手机，重启即黑砖，需9008复活。后悔药：在结束之前可随时刷入最初备份的原分区表进行回退\n双系统共存方法结构概览\n\n\n\n双分区的选择接下来，要通过对不同系统差异的分区进行重分区，做双分区处理，相同的当然就没必要了。\n\n\n\n分区名\n作用\n所在驱动器（基于mix2s示范）\n\n\n\nsystem\n系统分区\nsde\n\n\nvendor\n驱动分区\nsde\n\n\nboot\n内核分区\nsde\n\n\nuserdata\n用户数据分区\nsda\n\n\ndsp\n可能和媒体声音有关\nsde\n\n\nmodem\n基带解调器\nsde\n\n\n由于开机时bootloader加载时挂载分区是根据分区名称进行挂载，只认名字，所以要实现双系统，就需要将这些分区可以进行单独分开(自由选择分开哪些分区，此处只做示范)，分为system1，system2，vendor1，vendor2，boot1，boot2，userdata1，userdata2，dsp1，dsp2，modem1，modem2，再进一步做屏蔽处理。\n分区表的备份可以用sgdisk等工具自带的备份命令直接备份，也可直接用dd命令拷贝出驱动器前512个块（已完整包含该驱动器所有分区表信息）\n$ dd if=/dev/block/sda of=/sdcard/sda_fqb bs=512 count=1024 #从起始位置开始拷贝sda驱动器上的块，每次512B，累计1024次，即512K\n\n\n\n系统一分区的实例实现双系统的切换，则我们需要两张分区表，一张保存系统一的磁盘分区情况如下，此时系统二对应分区被屏蔽掉，开机不加载\n\n\n\n系统一\n系统二（不加载）\n\n\n\nsystem(sde)\nsystem2(sda)\n\n\nvendor(sde)\nvendor2(sda)\n\n\nboot(sde)\nboot2(sda)\n\n\nuserdata(sda)\nuserdata2(sda)\n\n\n代码如下：（基于miMIX2s的示范）\n$ dd if=/dev/block/sda bs=512 count=1024 of=/sdcard/sda #备份单系统时的分区表，后悔药$ dd if=/dev/block/sde bs=512 count=1024 of=/sdcard/sde$ sgdisk --delete=21 /dev/block/sda #删掉原data，留下空闲空间$ sgdisk --new=21:0:+64M /dev/block/sda --change-name=21:boot2 /dev/block/sda #新建另一个系统相关分区$ sgdisk --new=22:0:+1024M /dev/block/sda --change-name=22:vendor2 /dev/block/sda$ sgdisk --new=23:0:+3584M /dev/block/sda --change-name=23:system2 /dev/block/sda$ sgdisk --new=24:0:+5632M /dev/block/sda --change-name=24:userdata2 /dev/block/sda$ sgdisk --new=25:0:+40000M /dev/block/sda --change-name=25:userdata /dev/block/sda #将剩余空间还非配给这个系统$ dd if=/dev/block/sda bs=512 count=1024 of=/sdcard/sda_fqb1$ dd if=/dev/block/sde bs=512 count=1024 of=/sdcard/sde_fqb1\n\n\n\n系统二分区的实例另一张保存系统二的磁盘分区情况如下，此时系统一对应分区被屏蔽掉，开机不加载\n\n\n\n系统一（不加载）\n系统二\n\n\n\nsystem1\nsystem\n\n\nvendor1\nvendor\n\n\nboot1\nboot\n\n\nuserdata1\nuserdata\n\n\n代码如下：（基于miMIX2s的示范）\n$ sgdisk --change-name=25:userdata1 /dev/block/sda$ sgdisk --change-name=21:boot /dev/block/sda$ sgdisk --change-name=22:vendor /dev/block/sda$ sgdisk --change-name=23:system /dev/block/sda$ sgdisk --change-name=24:userdata /dev/block/sda$ sgdisk --change-name=45:boot1 /dev/block/sde$ sgdisk --change-name=47:vendor1 /dev/block/sde$ sgdisk --change-name=48:system1 /dev/block/sde$ dd if=/dev/block/sda bs=512 count=1024 of=/sdcard/sda_fqb2$ dd if=/dev/block/sde bs=512 count=1024 of=/sdcard/sde_fqb2\n\n\n\n双系统的切换每次只要载入不同的分区表信息，就能实现系统的切换，注意一定要保管好分区表信息不可丢失\n$ dd if=/sdcard/sda_fqb1 of=/dev/block/sda bs=512 count=1024 #将系统一sda分区表信息载入$ dd if=/sdcard/sde_fqb1 of=/dev/block/sde bs=512 count=1024 #将系统一sde分区表信息载入\n\n载入相关驱动器分区表信息即可切换到系统一。系统二同理\n双系统方案的优化将更多的分区独立开来当多个系统之间安卓底层版本不同时极易出现各种bug，即部分分区被共用所产生的问题，例如modem导致基带问题、dsp导致媒体声音问题。解决方案为将更多的分区给分开，当熟练掌握原理后即可仿照上例实现，但部分核心分区不可随意动手，切勿贪心。\n切换方式多样化将分区表或打包有分区表的卡刷包放至例如cust等空闲分区，通过如下方式切换\n\n终端命令切换。即上方提到的方式\nshell脚本切换。将命令打包添加至shell脚本，每次执行脚本即可\n卡刷包切换。将分区表打包进卡刷包到rec卡刷\nrecovery切换。将打包好的卡刷包打包进recovery.img，需自行搜索解包工具\napp切换。\n\n分区共享数据将未挂载的另外一个系统的相应分区挂载到本系统。\n$ mkdir /mnt/data_2$ mount -t ext4 -o rw /dev/block/by-name/userdata2 /mnt/data_2\n\n"},{"title":"nihao!","url":"/2021/02/27/nihao/","content":"This is my first blog!\n"}]